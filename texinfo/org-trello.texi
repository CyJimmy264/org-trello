\input texinfo    @c -*- texinfo -*-
@c %**start of header
@setfilename org-trello.info
@settitle org-trello Manual
@documentencoding UTF-8
@documentlanguage en
@documentdescription
Sync Emacs org-mode with Trello.com.
@end documentdescription
@c %**end of header

@copying
This is the org-trello Manual, edition 0.8.1.a, released 2019-01-30,
written and copyright ©2019 by Daniel Birket.

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
Texts. A copy of the license is included in the section entitled GNU
Free Documentation License.

@end quotation

This manaul describes how to install and use the Emacs package
org-trello, version 0.8.1, released 2018-03-18,
written and copyright ©2013-2017 by Antoine Dumont,
to synchronize org-mode TO-DO lists with @uref{https://trello.com, Trello.com}.

This manual was written with reference to the org-trello source-code,
which begins with this license and non-warranty statement:

@lisp
;;; org-trello.el 
;; Minor mode to synchronize org-mode buffer and trello board

;; Copyright (C) 2013-2017 by Antoine R. Dumont (@@ardumont) 
;; Author: Antoine R. Dumont <antoine.romain.dumont@@gmail.com>
;; Maintainer: Antoine R. Dumont

;; Version: 0.8.1
;; URL: https://github.com/org-trello/org-trello

;; This file is NOT part of GNU Emacs.

;; This program is free software; you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation; either version 3, or (at your option)
;; any later version.
;;
;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
;; GNU General Public License for more details.
@end lisp
@end copying

@dircategory Emacs editing modes
@direntry
* org-trello: (org-trello). Sync Emacs org-mode with Trello.com.
@end direntry

@finalout
@titlepage
@title org-trello Manual
@subtitle Sync Emacs org-mode with Trello.com.
@author Manual by Daniel Birket
@author Package by Antoine R. Dumont
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@contents

@ifnottex
@node Top
@top org-trello Manual

Sync Emacs org-mode with Trello.com.

@insertcopying
@end ifnottex

@menu
* About::                        About org-trello
* Demos::                        Demonstration Videos
* Installing::                   Installing org-trello
* Connecting::                   Connecting to Trello.com
* Using::                        Using org-trello
* Troubleshooting::              Troubleshooting org-trello
* Customizing::                  Customizing org-trello
* Contributing::                 Contributing to org-trello
* GNU GPL::                      GNU General Public License
* GNU FDL::                      GNU Free Documentation License
* Indices::                      Indices

@detailmenu
--- The Detailed Node Listing ---

Installing

* Installing: Installing (1).    Recommended Installation
* Alternate Installations::      Alternate Ways to Install
* Loading::                      Loading org-trello in Emacs
* Install Manual::               Installing the Manual
* Migrating::                    Migrating to New Releases

Installing

* About MELPA::                  Using MELPA with Package
* Installing from MELPA::        Installing from MELPA with Package

Alternate Installations

* Tarball::                      Download and Install the Tarball
* el-get::                       Get and Install with el-get
* GitHub & Cask::                Clone from GitHub and Install with Cask

Install Manual

* Building Manual::              Building the Manual
* Installing Manual::            Install the .info Manual

Migrating

* 0.8.1: 081. 
* 0.7.0: 070. 
* 0.6.7: 067. 
* 0.6.6: 066. 
* 0.5.5: 055. 
* 0.5.3: 053. 
* 0.5.2: 052. 
* 0.3.8: 038. 
* 0.3.1: 031. 
* 0.2.9: 029. 
* 0.2.8: 028. 
* 0.2.1 -> 0.2.2: 021 -> 022. 
* 0.1.5 -> 0.1.6: 015 -> 016. 
* 0.1.1 -> 0.1.2: 011 -> 012. 

Connecting

* Installing Credentials::       Installing Your Trello.com Credentials
* Connect Existing Board::       Connect a Buffer to an Existing board
* Create a Board::               Create a Board from a Buffer

Using

* Quick Start::                  First Steps with org-trello
* Command Descriptions::         Command Descriptions
* How to…::                      How to Perform Tasks
* Format::                       Format of org-trello

Command Descriptions

* Summary::                      Summary of Commands
* Connection Cmds::              Connection Commands
* Synch Cmds::                   Synchronization Commands
* Editing Cmds::                 Editing Commands
* Misc Cmds::                    Misc. Commands

Troubleshooting

* Common Issues::
* Error Messages::

Customizing

* Prefix Keys::                  Customizing the Prefix Keybinding
* Individual Keys::              Customizing Individual Key Bindings
* Variables::                    Customizing Variables
* Example::                      Example Emacs-Lisp Customization
* Auto Files::                   Automatic org-trello Files

Contributing

* Credits::                      Contributor Credits
* Issues::                       Issue List
* Mailing List::                 Mailing List
* Releases::                     Release List & Notes
* Compatibility::                Compatibility with Emacs
* CI Tests::                     Continuous Integration Tests
* Conventions::                  Developer’s Conventions

Issues

* Using @samp{M-x org-trello-bug-report}::
* Using @samp{orgtrello-log-trace}::

Conventions

* Sources::
* Makefile::

Indices

* Concepts::                     Concepts Index
* Command Index::                Commands Index
* Functions::                    Functions Index
* Variables: Variables (1).      Variables Index

@end detailmenu
@end menu

@node About
@chapter @strong{TODO} About org-trello

Why use org-trello?
@itemize
@item
You use Emacs @uref{https://orgmode.org, org-mode}.
@item
Your team uses @uref{https://trello.com/, Trello.com}.
@item
org-trello is the bridge between org-mode and Trello.com.
@item
Everyone wins!
@end itemize

@emph{Links:}
@itemize
@item
Download Zip
@item
Download Tarball
@item
View on GitHub
@end itemize

@node Demos
@chapter @strong{TODO} Demo Videos

@ifnothtml
Please see the HTML version of this manual for links to the
demonstration videos. They are not included in the info and PDF-format
manuals.
@end ifnothtml
@ifhtml
This section provides links to several demo videos.

@emph{Note:} The format of org-trello buffers has changed since these
videos were created. Please see the @ref{Format, , current org-trello format}.
@end ifhtml

@node Installing
@chapter @strong{TODO} Installing org-trello

This section describes how to obtain and install the org-trello
package and manual.

@menu
* Installing: Installing (1).    Recommended Installation
* Alternate Installations::      Alternate Ways to Install
* Loading::                      Loading org-trello in Emacs
* Install Manual::               Installing the Manual
* Migrating::                    Migrating to New Releases
@end menu

@node Installing (1)
@section @strong{TODO} Installing org-trello using Package (recommended)

@cindex org-trello, installing

@menu
* About MELPA::                  Using MELPA with Package
* Installing from MELPA::        Installing from MELPA with Package
@end menu

@node About MELPA
@subsection @strong{TODO} Using MELPA with Package

This section describes how to use “package” to download and install
packages including org-trello. If you already use “package” to access
“melpa” or “melpa-stable”, you don’t need to install “package” again.

@node Installing from MELPA
@subsection @strong{TODO} Installing from MELPA with Package

This section describes how to download and install org-trello once you
have installed Package and configured it to access MELPA@.

@node Alternate Installations
@section @strong{TODO} Alternate Ways to Install

@menu
* Tarball::                      Download and Install the Tarball
* el-get::                       Get and Install with el-get
* GitHub & Cask::                Clone from GitHub and Install with Cask
@end menu

@node Tarball
@subsection @strong{TODO} Download and Install the Tarball

@node el-get
@subsection @strong{TODO} Get and Install with el-get

@node GitHub & Cask
@subsection @strong{TODO} Clone from GitHub and Install with Cask

@node Loading
@section @strong{TODO} Loading org-trello in Emacs

Once org-trello is installed, it must be loading during initialization
of Emacs. Add this in your emacs configuration file “~/.emacs” or
“~/.emacs.d/init.el” to load org-trello when Emacs starts:

@lisp
(require 'org-trello)
@end lisp

@node Install Manual
@section Using the org-trello manual

@cindex manual, installing
This section describes how to build and install the TexInfo-format
“org-trello Manual”. TexInfo is the standard documentation format of
the GNU-project and is used by Emacs and org-mode. (org-trello is NOT
part of GNU emacs.) This manual is presented in three formats:

@itemize
@item
INFO hyper-linked text format, to read from within Emacs (or with
“info” at the command-line).
@item
HTML format, to read with a web-browser.
@item
PDF format, to read or print nicely-formatted on paper.
@end itemize

This org-trello manual may be installed in a folder on your INFOPATH
and listed in the INFO directory of manuals. You may access the INFO
manual directory of manuals from within Emacs by typing “C-h i d” or
from the command-line using the command “info”.

@ifnotinfo

@float Figure
@image{texinfo,,,,png}
@caption{Building the Manual with Texinfo}
@end float
@end ifnotinfo

@menu
* Building Manual::              Building the Manual
* Installing Manual::            Install the .info Manual
@end menu

@node Building Manual
@subsection Building the Manual

It should not be necessary to rebuild the org-trello manual. The
manual is distributed with all three formats already built and ready
to read. If the org-trello.info, .HTML and .PDF files already exist,
you don’t need to read this section.

This manual was written with Emacs and org-mode as “org-trello.org”,
then exported to TexInfo format as “org-trello.texi” using the Texinfo
exporter included with org-mode. Then, the .texi file should be
converted to .info, .HTML, or .PDF using the commands included with
the Texinfo package.

The “Makefile” includes the commands to make all three formats when
you invoke it with “make all”. You may also request “make info”, “make
view” (to view the new info manual), “make html” and “make pdf”. For
any of these commands, you must install Texinfo and edit the top of
the Makefile to provide the location of the Texinfo commands.

If you lack Texinfo, you may instead export org-trello.org directly to
.info, .HTML or .PDF using Emacs. Without Texinfo, the resulting HTML or
PDF document will be slightly different and will not have an index.
Texinfo creates a more attractive manual and conforms to GNU style.

@node Installing Manual
@subsection Installing the .info Manual

To install the org-trello.info manual so that it may be used by Emacs’
internal info reader or the command-line “info” command, you must:

@enumerate
@item
Optionally, use gzip to compress the .info file to .info.gz
@item
Copy or “install” the .info.gz (or .info) file info a folder listed in INFOPATH
@item
Use “install-info” to insert the new .info.gz file into info’s “dir”
file in that folder.
@end enumerate

This process is described in the @ref{Creating an Info File,Texinfo manual,,texinfo,}.

If you edit the top of the “Makefile” to provide the location of the
folder in your INFOPATH where the .info should be installed, the
“Makefile” will execute the gzip, install and install-info commands
when you type “make install”.

Once installed, you may invoke the command-line “info” reader or
Emacs’ internal info reader to view the listing of info manuals. The
info reader assembles the directory of info manuals from all the “dir”
files in the INFOPATH and may be different in each reader. Locate
“org-trello” in this list or use “m org-trello” to jump to it.

@node Migrating
@section @strong{CHEK} Migrating to New Releases

If you have previously installed and used a previous release of
org-trello, this section describes how to migrate your existing
org-trello installation to a new release.

@menu
* 0.8.1: 081. 
* 0.7.0: 070. 
* 0.6.7: 067. 
* 0.6.6: 066. 
* 0.5.5: 055. 
* 0.5.3: 053. 
* 0.5.2: 052. 
* 0.3.8: 038. 
* 0.3.1: 031. 
* 0.2.9: 029. 
* 0.2.8: 028. 
* 0.2.1 -> 0.2.2: 021 -> 022. 
* 0.1.5 -> 0.1.6: 015 -> 016. 
* 0.1.1 -> 0.1.2: 011 -> 012. 
@end menu

@node 081
@subsection 0.8.1

The org-trello key properties used in the buffer were clashing with
higher org-mode functionality (lookup, cf.
@uref{https://github.com/org-trello/org-trello/issues/366}).

Those properties were renamed with clash free names (@samp{-} separator
symbol was replaced with @samp{_}).

To help the migration, a routine has been integrated. This should not be
needed by the user though (the migration is integrated to the actions).
Still, if the user wants it, (s)he can do it through M-x
org-trello-migrate-buffer.

@node 070
@subsection 0.7.0

As of now, org-trello respects elisp conventions regarding the setup
file location. So the default @emph{~}.trello// will be moved silently to
@emph{~}.emacs.d/.trello//

Also, now users can use multiple trello accounts. So, provided you have
multiple accounts, some commands will ask you when they need you to
choose an account. Also, a silent migration will occur to existing
buffers. For example, if you have a buffer setup-ed with a user @emph{tony},
your existing configuration file @emph{~}.trello/config.el/ will be moved to
@emph{~}.emacs.d/.trello/tony.el/

Again, org-trello tries to respect elisp conventions regarding command
names. So the command names have been renamed from @emph{org-trello/} to
@emph{org-trello-}. Still, the old command names are available.

@node 067
@subsection 0.6.7

The comments are now displayed inline in the card. So the binding to
show the comments have been removed. To see comments, simply unfold the
card.

@node 066
@subsection 0.6.6

We can now remove a comment at point (if we are the owner of the
comment). Use M-x org-trello-delete-card-comment

@node 055
@subsection 0.5.5

Default bindings have been updated.

@multitable {aaaaaaaaa} {aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa}
@headitem Bindings
@tab Action
@item C-c o C
@tab Add comments to the cards at point. To show the cards comments, use C-u M-x org-trello-add-card-comments (C-u C-c o C)
@item C-c o o
@tab Removed. To show the cards comments, use C-u C-c o C
@end multitable

Of course, as usual, if you are not happy with this, simply update
@uref{bindings.html#bindings-override, your configuration file}.

@node 053
@subsection 0.5.3

Lots of work has been done to make org-trello:

@itemize
@item
more responsive (almost no more blocking actions).
@item
faster (trello queries have been improved to let the trello servers do
the computations)
@end itemize

Default @uref{http://org-trello.github.io/bindings.html#keybindings, interactive commands} names have been renamed to be explicit
and aligned between them.

@node 052
@subsection 0.5.2

Decision has been taken to remove the intermediary proxy used to bounce
requests to trello. This was introduced to permit asynchronous requests.
This was only partially applied. So too many lines of code to maintain
for small benefits.

This version is synchronous as it was in the beginning (The base code is
not the same though).

This is a temporary setback. We need time to craft a better
implementation for asynchronous requests (deferred, async libraries
seems interesting enough).

@node 038
@subsection 0.3.8

org-trello now tries to enforce symmetry, mainly regarding the sync
actions. So by default, an action pushes to trello. Using C-u, the
symmetric action pulls from trello.

@multitable {aaaaaaaaaaa} {aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa}
@headitem Bindings
@tab Action
@item C-c o c
@tab sync the entity TO trello without its structure
@item C-u C-c o c
@tab sync the entity FROM trello without its structure
@item C-c o C
@tab sync the entity and its structure TO trello
@item C-u C-c o C
@tab sync the entity and its structure FROM trello
@item C-c o s
@tab sync the buffer TO trello
@item C-u C-c o s
@tab sync the buffer FROM trello
@item C-c o a
@tab assign yourself to the card
@item C-u C-c o a
@tab unassign yourself from the card
@end multitable

@node 031
@subsection 0.3.1

The old checklist/item format has been removed -
@uref{https://github.com/org-trello/org-trello/issues/105}. Now the org
checkbox way is the standard one.

@node 029
@subsection 0.2.9

For information, from 0.2.9 onward, the property “orgtrello-id” from the
checkbox (checklists, items) will be hidden.

@emph{Note}

@itemize
@item
Upon activating org-trello minor mode, all existing checkbox will be
migrated and should disappear before your eyes.
@item
Symmetrically, when deactivating org-trello, all checkbox will appear.
@item
For this, org-trello use @uref{https://www.gnu.org/software/emacs/manual/html_node/elisp/Overlays.html, overlays}
(implementation detail which permits to hide buffer region).
@end itemize

If you began to use org-trello, nothing to do.

@node 028
@subsection 0.2.8

From 0.2.8 onward, the card description can be synchronized too. Just
synchronize as usual.

@node 021 -> 022
@subsection 0.2.1 -> 0.2.2

From the 0.2.2 version onward, we can assign people to card. As a
pre-requisite, we need to re-install the board (C-c o I), so that new
properties will be installed (users currently assigned to the board we
attach to).

This way, you will be able to use the assign (C-c o a) / unassign (C-c o
u) yourself to the card.

@node 015 -> 016
@subsection 0.1.5 -> 0.1.6

Org-trello now uses more natural ways of dealing with checklists using
checkboxes!

cf. @uref{migration.html#natural-org-format-from-016-onwards, natural org format (from 0.1.6 onwards)} for more details.

@node 011 -> 012
@subsection 0.1.1 -> 0.1.2

@itemize
@item
From version 0.1.1, some http requests will be asynchronous. For this,
we use elnode as a proxy server to make requests to trello. The elnode
server is started on the port 9876. You can always change this port
@end itemize

@example
(setq *ORGTRELLO-PROXY-PORT* 9876)
@end example

Then M-x orgtrello-proxy/reload

@node Connecting
@chapter @strong{TODO} Connecting to Trello.com

@cindex trello.com, connecting

@menu
* Installing Credentials::       Installing Your Trello.com Credentials
* Connect Existing Board::       Connect a Buffer to an Existing board
* Create a Board::               Create a Board from a Buffer
@end menu

@node Installing Credentials
@section Installing Your Trello.com Credentials

@node Connect Existing Board
@section Connect an org-mode buffer with an existing Trello board.

@node Create a Board
@section Create a Trello board from your org-mode buffer.

@node Using
@chapter @strong{TODO} Using org-trello

@cindex org-trello, using
This section describes how to use org-trello.

@menu
* Quick Start::                  First Steps with org-trello
* Command Descriptions::         Command Descriptions
* How to…::                      How to Perform Tasks
* Format::                       Format of org-trello
@end menu

@node Quick Start
@section @strong{TODO} Quick Start

@node Command Descriptions
@section Command Descriptions

This section describes all commands and their key bindings.

@menu
* Summary::                      Summary of Commands
* Connection Cmds::              Connection Commands
* Synch Cmds::                   Synchronization Commands
* Editing Cmds::                 Editing Commands
* Misc Cmds::                    Misc. Commands
@end menu

@node Summary
@subsection @strong{WORK} Summary of Commands

All default org-trello key-bindings use the “C-c o” prefix.

@kindex C-c o C-h
@emph{Note:} You may type “C-c o C-h” to display help for most org-trello
key bindings.

@multitable {aaaaaaaaaaa} {aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa}
@headitem Keys
@tab Command
@item C-c o C-h
@tab Display help on all key-bindings with C-c o prefix.
@item C-c o v
@tab Display the version of org-trello.
@item C-c o i
@tab Install the Trello.com access key and token.
@item C-c o I
@tab Choose an existing Trello board and attach this buffer.
@item C-c o b
@tab Create a new Trello board and attach this buffer
@item C-c o u
@tab Update this file’s attachment to its Trello board.
@item C-c o d
@tab Diagnose the setup.
@item C-c o D
@tab Delete all Trello metadata from this buffer.
@item C-c o c
@tab Create or Update a complete card.
@item C-c o s
@tab Synchronize FROM the entire buffer TO Trello.
@item C-u C-c o s
@tab Synchronize TO the entire buffer FROM Trello.
@item C-c o g
@tab Abort any synchronization in progress. (like C-g)
@item C-c $
@tab Archive the card at point. (Standard org binding)
@item C-c o A
@tab Archive all DONE cards.
@item 
@tab 
@end multitable

@node Connection Cmds
@subsection @strong{TODO} Connection Commands

This section describes the functions used to connect org-trello to
Trello.com and to attach an org file to a Trello board.

@node Synch Cmds
@subsection @strong{WORK} Synchronization Commands

This section describes the synchronization functions.

@kindex C-c o s
@kindex C-u C-c o s
@ftable @code
@item org-trello-sync-buffer
Type “C-c o s” to sync the entire buffer TO the Trello board.@*
Type “C-u C-c o s” to sync the entire buffer FROM the Trello board.
@end ftable

@node Editing Cmds
@subsection @strong{TODO} Editing Commands

This section describes the functions used to edit cards, comments and
list items.

@node Misc Cmds
@subsection @strong{TODO} Misc. Commands

This section describes other functions not listed above.

@node How to…
@section @strong{TODO} How to…

This section is describes how to use commands to perform tasks with org-trello.

@node Format
@section @strong{TODO} Format of org-trello

This section describes the format of the text in an org-trello buffer.

@node Troubleshooting
@chapter @strong{TODO} Troubleshooting org-trello

@cindex troubleshooting
@cindex errors

@menu
* Common Issues::
* Error Messages::
@end menu

@node Common Issues
@section Common Issues

@node Error Messages
@section Error Messages

@node Customizing
@chapter @strong{CHEK} Customizing org-trello

@cindex customizing
This section describes how you may customize org-trello.

@menu
* Prefix Keys::                  Customizing the Prefix Keybinding
* Individual Keys::              Customizing Individual Key Bindings
* Variables::                    Customizing Variables
* Example::                      Example Emacs-Lisp Customization
* Auto Files::                   Automatic org-trello Files
@end menu

@node Prefix Keys
@section @strong{CHEK} Customizing the Prefix Keybinding

@vindex org-trello-current-prefix-keybinding
By default, org-trello uses the prefix keybinding “C-c o” to begin
(almost) all of its commands. You may change this by customizing the
variable “org-trello-current-prefix-keybinding”.

To customize “org-trello-current-prefix-keybinding”, type “C-h v
org-trello-current-prefix-keybinding RET” to display the help text for this
variable. Then follow the “customize” link on the last line. You
may then use the customize interface to set another prefix keybinding.

@emph{Note:} If org-trello is already running, you must restart emacs after
customizing this variable (or run “M-x org-trello-mode” - @emph{twice}).

You may also change this setting in your emacs initialization file.
For example, to change the org-trello prefix keybinding to “C-c x” add
these lines to your ~/.emacs (or ~/.emacs.d/.init.el) file:

@lisp
(require 'org-trello)
(custom-set-variables '(org-trello-current-prefix-keybinding "C-c x"))
@end lisp

For an example, please see my @uref{https://github.com/ardumont/orgmode-pack/blob/master/orgmode-pack.el#L57, startup file}.

@node Individual Keys
@section @strong{CHEK} Customizing Individual Keybindings

@vindex org-trello-mode-map
To redefine one or more org-trello-mode command keybindings, you should create a
function to define keys in the org-trello-mode-map and hook your
function to the org-trello-mode-hook. This will make org-trello run
your function each time it starts.

@lisp
(require 'org-trello)

(defun def-my-org-trello-keys () "Define my org-trello keys."
  (define-key org-trello-mode-map (kbd "C-c x v") 'org-trello-version)
  (define-key org-trello-mode-map (kbd "C-c x i") 'org-trello-install-key-and-token)
  (define-key org-trello-mode-map (kbd "C-c x I") 'org-trello-install-board-metadata)
  (define-key org-trello-mode-map (kbd "C-c x c") 'org-trello-sync-card)
  (define-key org-trello-mode-map (kbd "C-c x s") 'org-trello-sync-buffer)
  (define-key org-trello-mode-map (kbd "C-c x a") 'org-trello-assign-me)
  (define-key org-trello-mode-map (kbd "C-c x d") 'org-trello-check-setup)
  (define-key org-trello-mode-map (kbd "C-c x D") 'org-trello-delete-setup)
  (define-key org-trello-mode-map (kbd "C-c x b") 'org-trello-create-board-and-install-metadata)
  (define-key org-trello-mode-map (kbd "C-c x k") 'org-trello-kill-entity)
  (define-key org-trello-mode-map (kbd "C-c x K") 'org-trello-kill-cards)
  (define-key org-trello-mode-map (kbd "C-c x a") 'org-trello-archive-card)
  (define-key org-trello-mode-map (kbd "C-c x A") 'org-trello-archive-cards)
  (define-key org-trello-mode-map (kbd "C-c x j") 'org-trello-jump-to-trello-card)
  (define-key org-trello-mode-map (kbd "C-c x J") 'org-trello-jump-to-trello-board)
  (define-key org-trello-mode-map (kbd "C-c x C") 'org-trello-add-card-comments)
  (define-key org-trello-mode-map (kbd "C-c x o") 'org-trello-show-card-comments)
  (define-key org-trello-mode-map (kbd "C-c x l") 'org-trello-show-card-labels)
  (define-key org-trello-mode-map (kbd "C-c x u") 'org-trello-update-board-metadata)
  (define-key org-trello-mode-map (kbd "C-c x h") 'org-trello-help-describing-bindings))

(add-hook 'org-trello-mode-hook 'def-my-org-trello-keys)
@end lisp

@emph{Note:} This will not update the help messages to match your
key-bindings nor remove the default keybindings.

You may add several lines like this one to your hook function to
remove specific existing org-trello keybindings:

@lisp
(define-key org-trello-mode-map (kbd "C-c o v") nil)
@end lisp

@node Variables
@section @strong{CHEK} Customizing org-trello Variables

You may customize org-trello settings by typing: @*
“M-x customize-group RET org-trello RET”.

You may customize any of the following variables from the user-interface.

@example
Parent groups: Org

Org-trello group:  Org-trello customisation group.
       State : visible group members are all at standard values.
   
Org Trello Add Tags 
   Add trello colors to org tags list?

Org Trello Current Prefix Keybinding 
   The default prefix keybinding to execute org-trello commands.

Org Trello Files 
   Org-trello files that needs org-trello activated when opened. Hide
   This does not support regular expression.

Org Trello Input Completion Mechanism 
   The completion mechanism the user can choose from. Hide
   Default is the native ido mechanism.
   Other possibilities is helm but it’s up to you to install the dependencies.
   (require ’helm)
   (custom-set-variables ’(org-trello-input-completion-mechanism ’helm))

Org Trello Mode Hook 
   Define org-trello hook for user to extend mode with their own behavior.

Orgtrello Log Level 
   Set log level. Hide
   Levels:
   0 - no log   (‘orgtrello-log-quiet’)
   1 - errors   (‘orgtrello-log-error’)
   2 - warnings (‘orgtrello-log-warn’)
   3 - info     (‘orgtrello-log-info’)
   4 - debug    (‘orgtrello-log-debug’)
   5 - trace    (‘orgtrello-log-trace’)
   To change such level, add this to your init.el file:
   (custom-set-variables ’(orgtrello-log-level orgtrello-log-trace))

Orgtrello Setup Use Position In Checksum Computation 
   Let the user decide if (s)he wants to use the position in the checksum. Hide
   The checksum is a hash computation of the current entity’s data to prevent
   sending too many sync requests if unnecessary (no real change since last time).
   
   If t, when sync to trello, any change for the current entity will be reflected
   in trello’s board.  However, a global sync to trello, will trigger many
   unnecessary sync to trello queries for any entity below the current entity
   changed...  Indeed, the position changes anytime you insert or delete a char.
   This renders almost useless the checksum computation.
   
   Cf.  https://github.com/org-trello/org-trello-issues/271.
   Please, do not hesitate to provide a better idea or a better implementation.
   
   If nil, the default, the sync to trello will be limited to what’s really changed
   (except for the position).  So the entity’s position in trello’s board can be
   slightly different than the one from the buffer.

Orgtrello With Check On Sensible Actions 
   Some action can be dangerous removing entity for example. Hide
   This custom determine if the user wants to be asked confirmation
   before doing some of those sensitive actions.
@end example

@node Example
@section @strong{CHEK} Example Emacs-Lisp Customization

Here is an example of how to configure org-trello user-customized
variables using emacs-lisp:

@lisp
(custom-set-variables
   '(orgtrello-log-level orgtrello-log-debug) ;; log level to debug
   '(org-trello-current-prefix-keybinding "C-c x") ;; C-c x as the default prefix
   '(orgtrello-setup-use-position-in-checksum-computation nil) ;; checksum without position
   '(org-trello-files '("~/docs/some-doc.trello"
                        "~/docs/some-other-doc.org"))) ;; automatic org-trello on files
@end lisp

To set these variables for the current session, place the cursor after
the entire s-exp and evaluate it using “M-x eval-last-sexp”.

To make these settings permanent in later sessions, put this code
inside your emacs setup file (“~/.emacs” or “~/emacs.d/init.el”).

@node Auto Files
@section @strong{CHEK} Automatic org-trello Files

To have emacs automatically start org-trello when you open a file with
a “.trello” extension, add this to your personal emacs setup file:

@lisp
;; org-trello major mode for all .trello files

(add-to-list 'auto-mode-alist '("\\.trello$" . org-mode))

;; add a hook function to check if this is trello file,
;; then activate the org-trello minor mode.

(add-hook 'org-mode-hook
          (lambda ()
            (let ((filename (buffer-file-name (current-buffer))))
              (when (and filename (string= "trello" (file-name-extension filename)))
              (org-trello-mode)))))
@end lisp

source: @uref{https://github.com/org-trello/org-trello/issues/249}

@node Contributing
@chapter @strong{CHEK} Development of org-trello

@cindex contributing

@menu
* Credits::                      Contributor Credits
* Issues::                       Issue List
* Mailing List::                 Mailing List
* Releases::                     Release List & Notes
* Compatibility::                Compatibility with Emacs
* CI Tests::                     Continuous Integration Tests
* Conventions::                  Developer’s Conventions
@end menu

@node Credits
@section @strong{CHEK} Credits

@cindex credits
@cindex contributors

Many thanks to all the @uref{https://github.com/org-trello/org-trello/graphs/contributors, contributors} to org-trello, including:

@table @asis
@item @uref{https://github.com/dtebbs, @@dtebbs}       
@uref{https://github.com/org-trello/org-trello/pull/173, PR - fix on the card description}
@item @uref{https://github.com/jasom, @@jasom}        
@uref{https://github.com/org-trello/org-trello/pull/175, PR - improvements on the trello card's description rendering}.
@item @uref{https://github.com/nicferrier, @@nicferrier}   
@uref{http://marmalade-repo.org/, marmalade}, @uref{https://github.com/nicferrier/elnode, elnode}, @uref{http://nic.ferrier.me.uk/blog/2012_07/emacs-packages-for-programmers, emacs clean install}@dots{}
@item @uref{https://twitter.com/nicolas_roche, @@nicolas_roche}
logo and the multiple suggestions regarding the web design part.
@item @uref{https://twitter.com/nmassyl, @@nmassyl}      
multiple exchanges on design and functionalities.
@item @uref{https://github.com/purcell, @@purcell}      
various discussions, suggestions regarding packaging on @uref{http://melpa.milkbox.net/, Melpa}
@item @uref{https://github.com/puzan, @@puzan}        
org-trello's el-get recipe
@end table

and thanks to all those that opened @uref{https://github.com/org-trello/org-trello/issues, issues} or @uref{https://github.com/org-trello/org-trello/pulls, pull requests}.

Also, thank you to the entire free-software community world-wide, including the
creators and contributors of Emacs and org-mode.

@node Issues
@section @strong{CHEK} Issue List

If you experience an issue while using org-trello, please first
confirm that you have the newest version of org-trello. If you
have an old version, please upgrade to the newest version - your issue
may already have been solved. You may display the version of your copy
of org-trello by typing “C-c o v” or “M-x org-trello-version”.

If you have the newest version, please search the @uref{https://github.com/org-trello/org-trello/issues, issue list} for
issues similar to yours. If your issue already exists, please describe
your experiences in the comments, if different, and try the
advice offered there, if any.

If you don’t find an issue like yours, you should create a new issue.

You should include the following information in your issue entry:

@itemize
@item
Your org-trello version
@item
Your org-mode version
@item
Your emacs version
@item
Your system type and OS version
@item
How you installed org-trello:
@itemize
@item
melpa
@item
melpa-stable
@item
el-get
@item
tarball
@item
git clone
@item
other
@end itemize
@item
A clear, concise and complete description of the issue. Please do state the obvious.
@item
Supporting data:
@itemize
@item
A copy of any pertinent messages produced by org-trello or Emacs
@item
A copy of buffer data necessary to reproduce the issue. (Please avoid posting
private data. Do not post your Trello.com or other login credentials.)
@item
If the issue is with installation, include the @samp{*Compile Log*}
buffer contents.
@end itemize
@end itemize

Please use GitHub’s markdown formatting to improve readability.

We may have questions about your issue or question if we don’t
understand. You can help us to help you better and faster by being
clear, concise and complete in your issue description.

@menu
* Using @samp{M-x org-trello-bug-report}::
* Using @samp{orgtrello-log-trace}::
@end menu

@node Using @samp{M-x org-trello-bug-report}
@subsection Using @samp{M-x org-trello-bug-report}

You may use the bug-report function of org-trello to print some
information about org-trello to the @strong{Messages} buffer to copy into the
issue entry. To print the bug-report data, type “M-x
org-trello-bug-report” or “C-c o B”. Then open the @strong{Messages} buffer
and copy the block of data it produced to paste into the issue on
GitHub. The block of data will resemble:

@example
System information:
- system-type: darwin
- locale-coding-system: utf-8-unix
- emacs-version: GNU Emacs 26.1
- org version: 9.2
- org-trello version: 0.8.0
- org-trello path: ~/.emacs.d/elpa/org-trello-20180331.631/org-trello.el
- request-backend: curl
- kill-whole-line: nil
@end example

If you type “C-u C-c o B” instead, org-trello will open a new issue on
GitHub for you to complete.

@node Using @samp{orgtrello-log-trace}
@subsection Using @samp{orgtrello-log-trace}

To obtain a more verbose output in the @strong{@strong{Message}} buffer, you can put
this snippet of code in a @samp{*scratch*} buffer.

@lisp
(custom-set-variables '(orgtrello-log-level orgtrello-log-trace))
@end lisp

and evaluate it with M-x eval-buffer. Then, return to your org-trello
buffer and repeat the conditions that cause the issue. Copy the
resulting detailed log messages into your bug-report.

@node Mailing List
@section @strong{CHEK} Mailing List

This project has a mailing list at librelist.com for communication
and community among its users and contributors. You may join the
list by sending an email to:

@itemize
@item
subscribe: emacs.org.trello [AT] librelist.com
@item
unsubscribe: emacs.org.trello-unsubscribe [AT] librelist.com
@end itemize

@node Releases
@section @strong{CHEK} Release List and Notes

@cindex release notes
@cindex version history
The @uref{https://github.com/org-trello/org-trello/releases, release list} of org-trello is on GitHub.

The separate @uref{release-notes.org, release-notes file} records the primary changes in each
release of org-trello. Please also see the @uref{https://github.com/org-trello/org-trello/commits/master, commit history} of the
@uref{https://github.com/org-trello/org-trello, repository} on GitHub.

@node Compatibility
@section @strong{CHEK} Compatibility with Emacs

org-trello has been tested with the following versions of Emacs and
Operating Systems:

@multitable {aaaaaaaaa} {aaaaaaaaaaaaaaaaaaaaaaaaaaaa} {aaaaaa}
@headitem Version
@tab OS
@tab Status
@item 24.3.1
@tab Linux Mint 14
@tab OK
@item 24.3.1
@tab Linux Mint 15 (ubuntu based)
@tab OK
@item 24.3.1
@tab Ubuntu 13.04
@tab OK
@item 24.3.1
@tab Ubuntu 13.10
@tab OK
@item 24.3.50.1
@tab Linux Mint 16 (debian based)
@tab OK
@item 24.4.1
@tab NixOS
@tab OK
@end multitable

@emph{Note:} We cannot test under MacOS X or MS windows so any feedback on
those is welcome.

@node CI Tests
@section @strong{CHEK} Continuous Integration Tests

org-trello uses @uref{https://travis-ci.org/org-trello/org-trello, Travis CI} for continuous integration testing.

The CI tests and installs:

@multitable {aaaaaaa} {aaaaaaaaaa} {aaaaaaaaaaa}
@headitem Version
@tab CI
@tab Manual Test
@item 24.1
@tab Not tested
@tab Not tested
@item 24.2
@tab Not tested
@tab Not tested
@item 24.3.1
@tab OK
@tab OK
@item 24.3.50
@tab OK
@tab OK
@item 24.4.1
@tab OK
@tab OK
@end multitable

@emph{Note:} Any feedback regarding the untested versions is welcome.

@node Conventions
@section @strong{CHEK} Developer’s Conventions

This describes the current conventions for org-trello's development.

@menu
* Sources::
* Makefile::
@end menu

@node Sources
@subsection Sources

The sources are split into @samp{namespaces} in the @uref{./src/, src/} folder.
This is described in the Namespaces section below.

@enumerate
@item
Conventions


As there exists no namespace in emacs-lisp, I use: 

@itemize
@item
convention in function names to determine the nature private/public 
@item
splitted files that represents namespaces.
@end itemize

@enumerate
@item
Rules


These conventions are enforced in org-trello:

@itemize
@item
functions are prefixed with
@samp{orgtrello-<NAMESPACE-FILENAME>-<FUNCTION-NAME>}
@item
@samp{<NAMESPACE-FILENAME>} is the filename without its path nor its
extension. For example, @samp{src/buffer.el} renders @samp{buffer}
@item
@samp{<FUNCTION-NAME>} is an alphanumeric symbol with @samp{-} as separator. For
example, @samp{orgtrello-api-add-board} is a public function which does
create a request to add a board.
@item
private functions are prefixed with @samp{--}. For example,
@samp{orgtrello-api--deal-with-optional-values} which is a private utility
function to help in creating api request.
@item
predicate functions are suffixed by @samp{-p}. For example,
@samp{orgtrello-data-entity-card-p} which checks if the parameter entity is
a card or not.
@end itemize

@emph{Note:} I adapted the code to abide by @uref{https://www.gnu.org/software/emacs/manual/html_node/elisp/Coding-Conventions.html, emacs-lisp's conventions}.

@item
Exception


@samp{org-trello.el} is the main namespace that declares the:

@itemize
@item
interactive commands used throughout all of org-trello 
@item
minor mode
@end itemize

Every exposed interactive command is named @samp{org-trello-fn-name}.
@end enumerate

@item
Namespaces


The namespaces are in loading order:

@multitable {aaaaaaaaaaaaaaaaaaaaaaaa} {aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa}
@headitem Namespaces file
@tab Description of the namespace
@item org-trello-log.el
@tab Provide log facilities
@item org-trello-setup.el
@tab Main variable definition that permits internal
@item 
@tab … org-trello functions customization
@item org-trello-date.el
@tab org-trello's date manipulation
@item org-trello-hash.el
@tab Hash-map manipulation utilities
@item org-trello-action.el
@tab Higher-order functions helper
@item org-trello-data.el
@tab Internal org-trello data manipulation
@item org-trello-entity.el
@tab Entity (card/checklist/item) predicates
@item org-trello-cbx.el
@tab Checkbox manipulation utilities
@item org-trello-api.el
@tab Trello API abstraction DSL
@item org-trello-query.el
@tab HTTP query utilities
@item org-trello-backend.el
@tab Deals with trello requests
@item org-trello-proxy.el
@tab Proxy utilities - Namespace in charge of dealing
@item 
@tab … with the orchestration of trello requests
@item org-trello-buffer.el
@tab Buffer manipulation functions
@item org-trello-input.el
@tab Text input functions
@item org-trello-controller.el
@tab Controller used by org-trello.el
@item org-trello-deferred.el
@tab Deferred computation in org-trello
@item org-trello.el
@tab Main information about org-trello (version,
@item 
@tab … licence, deps, etc@dots{}) + org-trello
@item 
@tab … minor mode definition which defines
@item 
@tab … interactive commands and the mode
@item utilities.el
@tab test utilities functions
@end multitable

@item
Loading


Use the @uref{./load-org-trello.el, load-org-trello.el} file to load org-trello for development
purposes and keep the emacs way of browsing source code (@samp{M-.} ,
@samp{M-,}).

Open the file and @samp{M-x eval-buffer}.
@end enumerate

@node Makefile
@subsection Makefile

The @uref{./Makefile, Makefile} is your ally for: 
@itemize
@item
package 
@item
test 
@item
release
@end itemize

@enumerate
@item
Package


This packages all the @emph{org-trello*.el} into a standard tar file.

@example
make package
@end example

@item
Test


@example
make test
@end example

@item
Install


To test that the package, once created, can be installed (using the
repository to fetch the dependencies).

@example
make install-file-with-deps-from-melpa
@end example

@emph{Note:} This will trigger the installation from a local package
@samp{org-trello-<VERSION>.tar}. The installation is used with the
dependencies fetched from melpa.

@emph{Note:} These are the targets used by the CI (cf. @uref{./.travis.yml, .travis.yml})

@item
Full install testing


As we deploy in melpa, we can ensure that once delivered, the
installation is ok using those targets.

@example
make install-package-from-melpa
@end example

@item
Release


The release process is done through 2 steps:

@enumerate
@item
Self Pull Request from the feature branch inside master

@example
make pr
@end example

@emph{Note:} You need `hub` installed for this target to work.

@item
Then trigger release through the call to the release target from the Makefile:

@example
make release
@end example

This will:
@itemize
@item
fetch the latest modifications on your repository 
@item
checkout the master branch
@item
fast-forward to the latest master commit 
@item
tag the latest commit from master using the $VERSION you submit to the
script (defaulting to the version from the org-trello.el header)
@item
push the tag to the upstream branch repository
@item
trigger the package target from the Makefile (thus building a new package to the latest version)
@item
Then manual delivery of the tar to the github release page
@end itemize

@emph{Note:}
@itemize
@item
this is an orchestration of the @uref{./release.sh, release.sh} script 
@item
the packaging for MELPA is automatically done from @samp{org-trello/org-trello} repository
@end itemize
@end enumerate
@end enumerate

@node GNU GPL
@appendix @strong{DONE} GNU General Public License

@cindex license, software
@include gpl.texi

@node GNU FDL
@appendix @strong{DONE} GNU Free Documentation License

@cindex license, manual
@include fdl.texi

@node Indices
@appendix Indices

This section contains the concepts, commands, functions and variables indices.

@menu
* Concepts::                     Concepts Index
* Command Index::                Commands Index
* Functions::                    Functions Index
* Variables: Variables (1).      Variables Index
@end menu

@node Concepts
@appendixsec Concepts Index

@printindex cp

@node Command Index
@appendixsec Commands Index

@printindex ky

@node Functions
@appendixsec Functions Index

@printindex fn

@node Variables (1)
@appendixsec Variables Index

@printindex vr

@bye